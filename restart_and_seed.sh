#!/bin/bash

echo "üîÑ Reiniciando contenedor con mapeo de volumen..."

# Detener y remover contenedor existente
docker stop charro-backend 2>/dev/null || true
docker rm charro-backend 2>/dev/null || true

# Crear carpeta data si no existe
mkdir -p data

# Reconstruir imagen
echo "üèóÔ∏è Reconstruyendo imagen..."
docker build --no-cache -t charro-bot-backend .

# Ejecutar contenedor con volumen mapeado
echo "üöÄ Ejecutando contenedor..."
docker run -d --name charro-backend -p 8000:8000 -v $(pwd)/data:/app/data charro-bot-backend

# Esperar que el contenedor se inicie
echo "‚è≥ Esperando que el contenedor se inicie..."
sleep 5

# Poblar base de datos
echo "üìä Poblando base de datos..."
docker exec charro-backend python -c "
import sys
sys.path.append('/app')
from app.core.database import engine
from app.models.database import Base, User, Show, EmailTemplate, SupervisionQueue
from sqlalchemy.orm import sessionmaker
from datetime import datetime
import json

# Crear tablas
Base.metadata.create_all(bind=engine)

# Crear sesi√≥n
Session = sessionmaker(bind=engine)
session = Session()

# Limpiar datos existentes
session.query(SupervisionQueue).delete()
session.query(EmailTemplate).delete()
session.query(Show).delete()
session.query(User).delete()

# Crear usuarios
users = [
    User(name='Juan P√©rez', email='juan@example.com', subscription_active=True, monthly_fee_current=True, registration_date=datetime.now()),
    User(name='Mar√≠a Garc√≠a', email='maria@example.com', subscription_active=True, monthly_fee_current=True, registration_date=datetime.now()),
    User(name='Carlos L√≥pez', email='carlos@example.com', subscription_active=False, monthly_fee_current=False, registration_date=datetime.now()),
]

for user in users:
    session.add(user)

# Crear shows
shows = [
    Show(
        title='Tini en el Campo de Polo',
        code='TINI2024',
        max_discounts=5,
        artist='Tini Stoessel',
        show_date=datetime(2024, 12, 15),
        venue='Campo de Polo',
        other_data={
            'price': 15000,
            'discount_details': '1. Mostrar este email en la boleter√≠a del Campo de Polo\n2. Indicar que ten√©s el descuento 2x1 para Tini\n3. Por cada entrada que compres, llev√°s otra gratis\n4. V√°lido solo para entradas generales\n5. No acumulable con otras promociones'
        }
    ),
    Show(
        title='Abel Pintos Ac√∫stico',
        code='ABEL2024',
        max_discounts=3,
        artist='Abel Pintos',
        show_date=datetime(2024, 11, 20),
        venue='Luna Park',
        other_data={
            'price': 12000,
            'discount_details': '1. Presentar este email en taquilla de Luna Park\n2. Mencionar c√≥digo de descuento ABEL2024\n3. Obtener 30% de descuento en entradas\n4. V√°lido hasta agotar stock\n5. M√°ximo 2 entradas por persona'
        }
    ),
    Show(
        title='La Beriso en Obras',
        code='BERISO2024',
        max_discounts=10,
        artist='La Beriso',
        show_date=datetime(2024, 10, 30),
        venue='Estadio Obras',
        other_data={
            'price': 8000,
            'discount_details': '1. Ir a boleter√≠a de Estadio Obras con este email\n2. Solicitar descuento La Beriso IndieHOY\n3. Recibir 25% de descuento\n4. V√°lido para todas las ubicaciones\n5. Presentar DNI junto con este email'
        }
    ),
]

for show in shows:
    session.add(show)

# Crear templates de email
templates = [
    EmailTemplate(
        template_name='approval',
        subject='‚úÖ ¬°Tu descuento para {show_title} fue aprobado!',
        body='¬°Hola {user_name}!\n\nBuenas noticias. Tu solicitud de descuento para el show de {show_title} fue aprobada.\n\nSegu√≠ los siguientes pasos:\n{discount_details}\n\nC√≥digo de Descuento: {discount_code}\n\nPresent√° este email en la boleter√≠a para hacerlo v√°lido. ¬°Que lo disfrutes!\n\n- El equipo de IndieHOY.'
    ),
    EmailTemplate(
        template_name='rejection',
        subject='‚ùå Tu solicitud de descuento no fue aprobada',
        body='Hola {user_name},\n\nLamentamos informarte que tu solicitud de descuento para {show_title} no pudo ser aprobada en esta ocasi√≥n.\n\nRaz√≥n: {rejection_reason}\n\nTe invitamos a estar atento a nuestras pr√≥ximas promociones.\n\n- El equipo de IndieHOY.'
    ),
]

for template in templates:
    session.add(template)

# Crear algunos casos de ejemplo en supervision queue
queue_items = [
    SupervisionQueue(
        user_email='juan@example.com',
        user_name='Juan P√©rez',
        show_id=1,
        show_description='Tini en el Campo de Polo',
        status='pending',
        email_subject='‚úÖ ¬°Tu descuento para Tini en el Campo de Polo fue aprobado!',
        email_content='¬°Hola Juan P√©rez!\n\nBuenas noticias. Tu solicitud de descuento para el show de Tini en el Campo de Polo fue aprobada.\n\nSegu√≠ los siguientes pasos:\n1. Mostrar este email en la boleter√≠a del Campo de Polo\n2. Indicar que ten√©s el descuento 2x1 para Tini\n3. Por cada entrada que compres, llev√°s otra gratis\n4. V√°lido solo para entradas generales\n5. No acumulable con otras promociones\n\nC√≥digo de Descuento: TINI-DISC-001\n\nPresent√° este email en la boleter√≠a para hacerlo v√°lido. ¬°Que lo disfrutes!\n\n- El equipo de IndieHOY.',
        discount_code='TINI-DISC-001',
        created_at=datetime.now()
    ),
    SupervisionQueue(
        user_email='maria@example.com',
        user_name='Mar√≠a Garc√≠a',
        show_id=2,
        show_description='Abel Pintos Ac√∫stico',
        status='approved',
        email_subject='‚úÖ ¬°Tu descuento para Abel Pintos Ac√∫stico fue aprobado!',
        email_content='¬°Hola Mar√≠a Garc√≠a!\n\nBuenas noticias. Tu solicitud de descuento para el show de Abel Pintos Ac√∫stico fue aprobada.\n\nSegu√≠ los siguientes pasos:\n1. Presentar este email en taquilla de Luna Park\n2. Mencionar c√≥digo de descuento ABEL2024\n3. Obtener 30% de descuento en entradas\n4. V√°lido hasta agotar stock\n5. M√°ximo 2 entradas por persona\n\nC√≥digo de Descuento: ABEL-DISC-002\n\nPresent√° este email en la boleter√≠a para hacerlo v√°lido. ¬°Que lo disfrutes!\n\n- El equipo de IndieHOY.',
        discount_code='ABEL-DISC-002',
        created_at=datetime.now(),
        reviewer='Supervisor',
        reviewed_at=datetime.now()
    ),
]

for item in queue_items:
    session.add(item)

session.commit()
session.close()
print('‚úÖ Base de datos creada y poblada exitosamente')
"

echo "‚úÖ ¬°Listo! Contenedor ejecut√°ndose con base de datos mapeada"
echo "üìç Base de datos ubicada en: $(pwd)/data/charro_bot.db"
echo "üåê Dashboard: http://localhost:8000/static/supervision.html"
echo "üåê Landing: http://localhost:8000/static/request-discount.html" 